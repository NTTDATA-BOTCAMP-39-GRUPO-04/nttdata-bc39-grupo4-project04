spring:
  application:
    name: customer-service
  cloud:
    config:
      enabled: true
      label: master
      uri: http://localhost:9097

#H2 DB
spring.datasource.url: jdbc:h2:mem:accountdb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName: org.h2.Driver
spring.datasource.username: sa
spring.datasource.password:

# Enabling H2 Console
spring.h2.console.enabled: true
spring.h2.console.path: /h2
# Connection details
spring.cache.type: redis
spring.redis.host: localhost
spring.redis.port: 6379

#Eureka
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    service-url:
      defaultZone: http://localhost:8761/eureka

#Mongo db
spring.data.mongodb.database: customer-db
spring.data.mongodb.host: localhost
spring.data.mongodb.port: 27017
spring.data.mongodb.uri: mongodb://localhost/customer-db
spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

---
spring.config.activate.on-profile: docker
server.port: 8080
spring:
  cloud:
    config:
      enabled: true
      label: master
      uri: http://config-server
#eureka
eureka:
  client:
    fetch-registry: 'true'
    register-with-eureka: 'true'
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    service-url:
      defaultZone: http://eureka-server/eureka
spring.data.mongodb.host: mongodocker
spring.data.mongodb.uri: mongodb://mongodocker/customer-db